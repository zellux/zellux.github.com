<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ZelluX's Dev Blog]]></title>
  <link href="http://blog.zellux.me/atom.xml" rel="self"/>
  <link href="http://blog.zellux.me/"/>
  <updated>2013-04-23T10:50:38+08:00</updated>
  <id>http://blog.zellux.me/</id>
  <author>
    <name><![CDATA[zellux]]></name>
    <email><![CDATA[zellux@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add GitHub Issues to Your Things Inbox]]></title>
    <link href="http://blog.zellux.me/2013/04/add-github-issues-to-your-things-inbox/"/>
    <updated>2013-04-03T11:15:00+08:00</updated>
    <id>http://blog.zellux.me/2013/04/add-github-issues-to-your-things-inbox</id>
    <content type="html"><![CDATA[<p>I use <a href="http://culturedcode.com/things/">Things</a> to organise TODOs, and our team adopts GitHub private repositories as a platform to collaborate and issue tracking. Having two issue tracking applications brings some trouble. Whenever I want to see what next to do, I need to check both Things and GitHub issues.</p>

<p>So I write a Chrome extension to help me copy GitHub issues to my Things inbox. After installation, it will add an &#8216;Add to Things&#8217; button in every GitHub issue page, near &#8216;Edit&#8217; button. A Things New To Do box will popup if you click the button, with issue title, url, and description within it.</p>

<p>Since I still have some problem getting my Google Checkout account, you can download the extension on GitHub: <a href="https://github.com/zellux/github-issues-to-things">https://github.com/zellux/github-issues-to-things</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slicing Return Object of ActiveRecord::Base#attributes]]></title>
    <link href="http://blog.zellux.me/2013/03/slicing-return-object-of-activerecord-base-number-attributes/"/>
    <updated>2013-03-23T01:14:00+08:00</updated>
    <id>http://blog.zellux.me/2013/03/slicing-return-object-of-activerecord-base-number-attributes</id>
    <content type="html"><![CDATA[<p>The problem occurred when I tried to create another object with attributes of current object like:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">record</span> <span class="o">=</span> <span class="no">AnotherActiveRecord</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">SomeActiveRecord</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="ss">:user_id</span><span class="p">,</span> <span class="ss">:item_id</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you may find out, <code>Base#attributes</code> here return a Hash with Strings as keys, so when you try to slice them with Symbols, it returns an empty Hash object. To get what you want, you can either use Strings as keys, like</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">record</span> <span class="o">=</span> <span class="no">AnotherActiveRecord</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">SomeActiveRecord</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="s1">&#39;user_id&#39;</span><span class="p">,</span> <span class="s1">&#39;item_id&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>or get another Hash object which is indifferent in String and Symbol as key objects:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">record</span> <span class="o">=</span> <span class="no">AnotherActiveRecord</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">SomeActiveRecord</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">with_indifferent_access</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="ss">:user_id</span><span class="s1">&#39;, :item_id&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Random Rails Attribute Exceptions]]></title>
    <link href="http://blog.zellux.me/2013/03/fixing-random-attribute-exception-in-rails/"/>
    <updated>2013-03-04T11:02:00+08:00</updated>
    <id>http://blog.zellux.me/2013/03/fixing-random-attribute-exception-in-rails</id>
    <content type="html"><![CDATA[<p>In the previous weeks I found in my Rails log that there were random exceptions when I was trying to access some attributes from current_user, like <code>current_user.id</code>, and I was pretty sure that user had logged in when accessing such attributes.</p>

<p>All the exceptions were quite random. The statements which cased these exceptions worked for the most time. Here are some exception traces:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>
</span><span class='line'>NoMethodError (undefined method `to_sym' for nil:NilClass):
</span><span class='line'>  activerecord (3.2.11) lib/active_record/sanitization.rb:60:in `block in expand_hash_conditions_for_aggregates'
</span><span class='line'>  activerecord (3.2.11) lib/active_record/sanitization.rb:59:in `each'
</span><span class='line'>  activerecord (3.2.11) lib/active_record/sanitization.rb:59:in `expand_hash_conditions_for_aggregates'
</span><span class='line'>  activerecord (3.2.11) lib/active_record/relation/query_methods.rb:326:in `build_where'
</span><span class='line'>  activerecord (3.2.11) lib/active_record/relation/query_methods.rb:136:in `where'
</span><span class='line'>  activerecord (3.2.11) lib/active_record/querying.rb:9:in `where'
</span><span class='line'>  orm_adapter (0.4.0) lib/orm_adapter/adapters/active_record.rb:17:in `get'
</span><span class='line'>  devise (2.1.2) lib/devise/models/authenticatable.rb:183:in `serialize_from_session'
</span><span class='line'>  devise (2.1.2) lib/devise/rails/warden_compat.rb:29:in `deserialize'
</span><span class='line'>  warden (1.2.1) lib/warden/session_serializer.rb:35:in `fetch'
</span><span class='line'>  warden (1.2.1) lib/warden/proxy.rb:212:in `user'
</span><span class='line'>  warden (1.2.1) lib/warden/proxy.rb:318:in `_perform_authentication'
</span><span class='line'>  warden (1.2.1) lib/warden/proxy.rb:127:in `authenticate!'
</span><span class='line'>  devise (2.1.2) lib/devise/controllers/helpers.rb:48:in `authenticate_user!'
</span><span class='line'>  activesupport (3.2.11) lib/active_support/callbacks.rb:451:in `_run__2120724129680932349__process_action__409155903620940597__callbacks'
</span><span class='line'>  activesupport (3.2.11) lib/active_support/callbacks.rb:405:in `__run_callback'
</span><span class='line'>  activesupport (3.2.11) lib/active_support/callbacks.rb:385:in `_run_process_action_callbacks'
</span><span class='line'>  activesupport (3.2.11) lib/active_support/callbacks.rb:81:in `run_callbacks'
</span><span class='line'>  actionpack (3.2.11) lib/abstract_controller/callbacks.rb:17:in `process_action'
</span><span class='line'>  actionpack (3.2.11) lib/action_controller/metal/rescue.rb:29:in `process_action'
</span><span class='line'>  actionpack (3.2.11) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'
</span><span class='line'>  activesupport (3.2.11) lib/active_support/notifications.rb:123:in `block in instrument'
</span><span class='line'>  activesupport (3.2.11) lib/active_support/notifications/instrumenter.rb:20:in `instrument'
</span><span class='line'>  activesupport (3.2.11) lib/active_support/notifications.rb:123:in `instrument'
</span><span class='line'>  actionpack (3.2.11) lib/action_controller/metal/instrumentation.rb:29:in `process_action'
</span><span class='line'>  actionpack (3.2.11) lib/action_controller/metal/params_wrapper.rb:207:in `process_action'
</span><span class='line'>  activerecord (3.2.11) lib/active_record/railties/controller_runtime.rb:18:in `process_action'
</span><span class='line'>  ……</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>ActiveRecord::UnknownPrimaryKey (Unknown primary key for table users in model User.):
</span><span class='line'>  app/concerns/xxx.rb:15:in `xxxxxx'
</span><span class='line'>  app/controllers/items_controller.rb:37:in `xxxxxx'</span></code></pre></td></tr></table></div></figure>


<p>The Rails application is running on Debian 6.0.2 x86_64, powered by unicorn 4.1.1, MySQL 5.1 and nginx 1.0.12.</p>

<p>At first I thought the problem was related with old version of <a href="https://github.com/plataformatec/devise">devise</a>, but after upgrading it to the latest stable version, the problem still existed. And I also tried several other approaches, but none of them worked.</p>

<p>One day I found in the log that occasionally it took a SQL SELECT statement 800ms to get result from a table with less than  100 entries. Then I realised MySQL was overloaded.</p>

<p>My previous configuration of unicorn and database created 8 unicorn worker processes, each maintaining 5 concurrent connections (5 is the default value) to MySQL, which means there were 40 concurrent connections to MySQL. I changed it to 4 processes, each with 2 MySQL connections. Since that similar exceptions have never occurred in the last week.</p>

<p>This is my tedious log of how this bug is fixed. Hope it can help you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Feeds for Octopress]]></title>
    <link href="http://blog.zellux.me/2013/01/multiple-feeds-for-octopress/"/>
    <updated>2013-01-01T17:43:00+08:00</updated>
    <id>http://blog.zellux.me/2013/01/multiple-feeds-for-octopress</id>
    <content type="html"><![CDATA[<p>Before writing in Octopress, I was using Wordpress as blog platform. Wordpress provides Atom seed via /feed/, and after switching my blog platform to Octopress (the blog url is not changed), Atom seed is published through /atom.xml, which means subscribers to my Wordpress will not notified for future blog updates.</p>

<p>I figured out two approaches to make them happy. One way is to redirect /feed/ requests to /atom.xml. Take nginx as an example, add the following lines to the site configuration:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>location = /feed/ {
</span><span class='line'>    rewrite ^(.*)$ http://blog.yxwang.me/atom.xml;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Meanwhile if <a href="http://httpd.apache.org/docs/2.2/howto/htaccess.html">.htaccess</a> is supported on your server you can also define redirection with it.</p>

<p>Recently I switched to another static web service, neither .htaccess nor nginx configuration is allowed. I have to find new way to make /feed/ provides Atom. Here is one simple way to do it, by adding two lines to the end of :generate task, the script will save a clone of atom.xml to /feed/index.html:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;Generate jekyll site&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:generate</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">raise</span> <span class="s2">&quot;### You haven&#39;t set anything up yet. First run `rake install` to set up an Octopress theme.&quot;</span> <span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="n">source_dir</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Generating Site with Jekyll&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;compass compile --css-dir </span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/stylesheets&quot;</span>
</span><span class='line'>  <span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="s1">&#39;minify_and_combine&#39;</span><span class="o">].</span><span class="n">execute</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;jekyll&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;mkdir -p </span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2">/feed&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;cp </span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2">/atom.xml </span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2">/feed/index.html&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now I can see my latest blog posts with old /feed/ url (Note that the blog mentioned here is <a href="http://blog.yxwang.me/">another one</a>) written in Chinese. Hope this trick can help you as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Traps in Comparing Container Sizes]]></title>
    <link href="http://blog.zellux.me/2012/12/traps-in-comparing-container-sizes/"/>
    <updated>2012-12-06T15:28:00+08:00</updated>
    <id>http://blog.zellux.me/2012/12/traps-in-comparing-container-sizes</id>
    <content type="html"><![CDATA[<p>I just started learning C++ and occurred a bug related with container size comparison.</p>

<p>The following code looks ok from Java or Ruby&#8217;s perspective:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">front</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="n">back</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">back</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="o">*</span><span class="n">front</span><span class="p">.</span><span class="n">rbegin</span><span class="p">());</span>
</span><span class='line'>    <span class="n">front</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="o">--</span><span class="n">front</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>However, there is a critical bug in this code. <code>size()</code> method returns a value in <code>size_type</code>, which is an unsigned integer. If front.size() is smaller than back.size(), the minus will underflow and result in a very large value, thus making the while loop condition true.</p>

<p>Knowing the reason, it is easy to correct this loop condition as follows:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">front</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">back</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">back</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="o">*</span><span class="n">front</span><span class="p">.</span><span class="n">rbegin</span><span class="p">());</span>
</span><span class='line'>    <span class="n">front</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="o">--</span><span class="n">front</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful Methods in Kaminari]]></title>
    <link href="http://blog.zellux.me/2012/09/useful-methods-in-kaminari/"/>
    <updated>2012-09-09T23:18:00+08:00</updated>
    <id>http://blog.zellux.me/2012/09/useful-methods-in-kaminari</id>
    <content type="html"><![CDATA[<p>The famous Rails paginator
<a href="https://github.com/amatsuda/kaminari/">Kaminari</a> provides some
methods in query objects, which may be useful for customizing
views. They are not listed on the document, you may find them in
<a href="https://github.com/amatsuda/kaminari/blob/master/lib/kaminari/models/page_scope_methods.rb">lib/kaminari/models/page_scope_methods.rb</a>:</p>

<ul>
<li>total_pages (alias num_pages)</li>
<li>current_page</li>
<li>first_page?</li>
<li>last_page?</li>
</ul>


<p>Method names are intuitive enough to show what the method returns.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Successor with Delete]]></title>
    <link href="http://blog.zellux.me/2012/08/notes-of-algorithms-course-week-1/"/>
    <updated>2012-08-30T10:05:00+08:00</updated>
    <id>http://blog.zellux.me/2012/08/notes-of-algorithms-course-week-1</id>
    <content type="html"><![CDATA[<h2>Problem</h2>

<p>Given a set of N integers S={0,1,&#8230;,N−1} and a sequence of requests of the following form:</p>

<ul>
<li>Remove x from S</li>
<li>Find the successor of x: the smallest y in S such that y≥x.</li>
</ul>


<p>design a data type so that all operations (except construction) should take logarithmic time or better.</p>

<h2>Solution</h2>

<p>This is a problem taken from the interview questions in union-find set on <a href="https://class.coursera.org/algs4partI-2012-001/quiz/attempt?quiz_id=89">Coursea Algorithms Course</a>.</p>

<p>It would be much harder if posted to the interviewee without context of union-find set. Fortunately we now known it can be solved with union-find set.</p>

<p>The results of finding the successor of x are saved in union-find sets, that is, when finding the successor of x, we simply return the root of the set containing x. When removing x from S, we need to make successor of removed numbers consequent to x and before x as that of x + 1. This is exactly what union function needs to do. To remove x from S, we simply merge the set containing x to the set containing x + 1 (append as its child).</p>

<p>This will work for both removing and finding except that in worst cases it does not run in logarithmic time, since it does not consider set weight when merging two sets. To opmitize this, our merging function will work in a way similar to weighted quick union, except that if the numbers in the larger set are smaller than that in the smaller one, we need to change the root of unioned set to the root of the larger set. This can be done by changing the original root of the two sets. Then we make ensure logarithmic time in worst case.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solutions to CLRS Chapter 32.1]]></title>
    <link href="http://blog.zellux.me/2012/08/solution-to-clrs-chapter-32/"/>
    <updated>2012-08-22T22:22:00+08:00</updated>
    <id>http://blog.zellux.me/2012/08/solution-to-clrs-chapter-32</id>
    <content type="html"><![CDATA[<h2>Problem 32.1-2</h2>

<blockquote><p>Suppose that all characters in the pattern P are different. Show how to accelerate NAIVE-STRING-MATCHER to run in time O(n) on an n-character text T .</p></blockquote>

<p>When T[i] and P[j] mismatches in NAIVE-STRING-MATCHER, we can skip all characters before T[i] and begin new matching from T[i + 1] with P[1].</p>

<h2>Problem 32.1-4</h2>

<blockquote><p>  Suppose we allow the pattern P to contain occurrences of a gap character ◇ that can match an arbitrary string of characters (even one of zero length). Note that the gap character may occur an arbitrary number of times in the pattern but not at all in the text. Give a polynomial-time algorithm to determine whether such a pattern P occurs in a given text T , and analyze the running time of your algorithm.</p></blockquote>

<p>We can solve this problem using dynamic programming. Assume we have function F(T<sub>i</sub>, P<sub>j</sub>), which defines whether the subpattern P<sub>j</sub> matches T<sub>i</sub>, and its value can be deducted from three sub-problems:</p>

<ol>
<li>P[j] == ◇ AND F(T<sub>i-1</sub>, P<sub>j</sub>)</li>
<li>P[j] == ◇ AND F(T<sub>i</sub>, P<sub>j-1</sub>)</li>
<li>F(T<sub>i-1</sub>, P<sub>j-1</sub>)</li>
</ol>


<p>F(T<sub>i</sub>, P<sub>j</sub>) is true, if and only if any of the above statements is true. The problem can thus be sovled in O(n ^ 2) in a bottom-up way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Order of Formats in response_to Does Matter]]></title>
    <link href="http://blog.zellux.me/2012/08/order-of-different-formats-in-response-to-does-matter/"/>
    <updated>2012-08-17T19:48:00+08:00</updated>
    <id>http://blog.zellux.me/2012/08/order-of-different-formats-in-response-to-does-matter</id>
    <content type="html"><![CDATA[<p>The following code snippet works well for most browsers:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">blah</span> <span class="n">blah</span> <span class="p">}</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>But some browsers, especially embedded webkit components, may set ContentType to <code>*/*</code> in request headers. In this case, they will get JSON data instead of HTML if they do not explicitly specify .html format in URL.</p>

<p>So as long as it is not intended, putting format.html before format.json will always be a better choice.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding Content-Length to send_file Headers]]></title>
    <link href="http://blog.zellux.me/2012/06/adding-missing-content-length-to-send-file-headers/"/>
    <updated>2012-06-18T19:52:00+08:00</updated>
    <id>http://blog.zellux.me/2012/06/adding-missing-content-length-to-send-file-headers</id>
    <content type="html"><![CDATA[<p>Some clients and networking libraries may expect &#8216;Content-Length&#8217; in response headers when downloading files. However, this parameter is not provided in Rails send_file method. To add content size to the header, you may just add a line next to the send_file method:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">download</span>
</span><span class='line'>    <span class="n">filename</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span>
</span><span class='line'>    <span class="n">send_file</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
</span><span class='line'>    <span class="n">headers</span><span class="o">[</span><span class="s1">&#39;Content-Length&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">size</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Notes on RSpec]]></title>
    <link href="http://blog.zellux.me/2012/05/some-notes-on-rspec/"/>
    <updated>2012-05-07T15:40:00+08:00</updated>
    <id>http://blog.zellux.me/2012/05/some-notes-on-rspec</id>
    <content type="html"><![CDATA[<h3>Stubbing instance methods</h3>

<p>The method <code>any_instance</code> allows stubbing instance methods easily. For example, the following line will force calling Item#price to return 10 always:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Item</span><span class="o">.</span><span class="n">any_instance</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:price</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Stubbing in helper specs</h3>

<p>Stubbing in helper specs is similar to stubbing in controller specs. Just remember to add <code>helper.</code> before every helper method call.</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s1">&#39;test current user&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">helper</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:current_user</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>  <span class="n">helper</span><span class="o">.</span><span class="n">user_avatar</span><span class="o">.</span><span class="n">should_not</span> <span class="n">be_empty</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>let and let!</h3>

<p>Variables defined by <code>let</code> is evaluated in a lazy way. Use <code>let!</code> to force the evaluation before each spec.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Speeding Up String Concatenation in Ruby]]></title>
    <link href="http://blog.zellux.me/2012/03/speeding-up-string-concatenation-in-ruby/"/>
    <updated>2012-03-30T16:31:00+08:00</updated>
    <id>http://blog.zellux.me/2012/03/speeding-up-string-concatenation-in-ruby</id>
    <content type="html"><![CDATA[<p>When concatenation large chunks of strings in Ruby, operator <code>&lt;&lt;</code> will be more efficient than <code>+</code>. This is because <code>+</code> creates immutable strings and introduces burden on garbage collector, while <code>&lt;&lt;</code> mutates the orinal string and thus do not create new objects.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Optimizing Page Rendering Speed for iPad 3]]></title>
    <link href="http://blog.zellux.me/2012/03/optimizing-page-rendering-speed-for-ipad-3/"/>
    <updated>2012-03-27T18:16:00+08:00</updated>
    <id>http://blog.zellux.me/2012/03/optimizing-page-rendering-speed-for-ipad-3</id>
    <content type="html"><![CDATA[<p>When developing online book store in <a href="http://tangcha.tc">Tangcha</a>, we were confronted with slow web page rendering issue on iPad 3, and finally found out two optimizations to make it much faster. The approaches were also posted on <a href="http://stackoverflow.com/a/10721238/111896">Stack Overflow</a>.</p>

<ol>
<li><p>Avoid using CSS3 effects. We used a lot of CSS3 shadows in previous versions, which slowed down rendering process on iPad 3 a lot. After replacing those shadow effects with background images, performance got greatly improved on iPad 3.</p></li>
<li><p>Optimize Javascript. Our application has some scrollable components, whenever user scrolls the component some Javascript code will be executed to do some loading work, like loading images in a lazy way. On iPad 3 scrolling will delay for 500ms when user tries to scroll from one page to the next. Then we found some unnecessary image loading work were performed in the scrolling callback, after removing them, the scrolling performance is acceptable.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finding out the encoding of a MySQL Database]]></title>
    <link href="http://blog.zellux.me/2012/03/finding-out-the-encoding-of-a-mysql-database/"/>
    <updated>2012-03-23T09:45:00+08:00</updated>
    <id>http://blog.zellux.me/2012/03/finding-out-the-encoding-of-a-mysql-database</id>
    <content type="html"><![CDATA[<p>Find out the encoding of a MySQL database:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>SHOW VARIABLES LIKE 'character_set_%';</span></code></pre></td></tr></table></div></figure>


<p>Find out the encoding of a specific table:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>SHOW CREATE TABLE table_name;</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Concurrency vs Parallellism]]></title>
    <link href="http://blog.zellux.me/2012/03/concurrency-vs-parallellism/"/>
    <updated>2012-03-23T00:19:00+08:00</updated>
    <id>http://blog.zellux.me/2012/03/concurrency-vs-parallellism</id>
    <content type="html"><![CDATA[<p>Just found a simple and accurate definition in Go Course Day 2:</p>

<blockquote><p>Concurrency is a property of the problem. Parallel execution is when the concurrent parts are executed at the same time on separate processes.</p></blockquote>

<p> I cannot find original slides on <a href="http://golang.org">golang.org</a> though.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Pitfall in CoffeeScript Ranges]]></title>
    <link href="http://blog.zellux.me/2012/03/a-pitfall-in-coffeescript-ranges/"/>
    <updated>2012-03-06T15:38:00+08:00</updated>
    <id>http://blog.zellux.me/2012/03/a-pitfall-in-coffeescript-ranges</id>
    <content type="html"><![CDATA[<p>Ranges in CoffeeScript look similar to Ruby ranges, except for one big divergence. When used in a reversed order, ranges in CoffeeScript will return an array of revered items, while in Ruby an empty sequence will be generated:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'># Ruby
</span><span class='line'>(2..0).to_a  # []
</span><span class='line'>
</span><span class='line'># CoffeeScript
</span><span class='line'>[2..0] # [2, 1, 0]</span></code></pre></td></tr></table></div></figure>


<p>I am not sure why it is designed in this way. Just be careful of this pitfall when dealing with ranges in CoffeeScript.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing ImageMagick crash issues on Mac OS X]]></title>
    <link href="http://blog.zellux.me/2012/02/fixing-imagemagick-crash-issues-on-mac-os-x/"/>
    <updated>2012-02-23T16:04:00+08:00</updated>
    <id>http://blog.zellux.me/2012/02/fixing-imagemagick-crash-issues-on-mac-os-x</id>
    <content type="html"><![CDATA[<p>ImageMagick may be prone to crash on Mac OS X, and it can be avoided by disabling OpenMP when compile the library:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>brew install -f imagemagick --disable-openmp</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
